(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{302:function(n,t,a){"use strict";a.r(t);var s=a(13),o=Object(s.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[n._v("#")]),n._v(" NGINX")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/gcc001224/article/details/125000155",target:"_blank",rel:"noopener noreferrer"}},[n._v("nginx location  Rewrite（重写地址）"),t("OutboundLink")],1)]),n._v(" "),t("div",{staticClass:"language-yml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[n._v("（1）location = / "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n=为精确匹配 / ，主机名后面不能带任何字符串，比如访问 / 和 /data，则 / 匹配，/data 不匹配\n再比如 location = /abc，则只匹配/abc ，/abc/或 /abcd不匹配。若 location  /abc，则即匹配/abc 、/abcd/ 同时也匹配 /abc/。\n\n（2）location / "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求 比如访问 / 和 /data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" 则 / 匹配， /data 也匹配，\n但若后面是正则表达式会和最长字符串优先匹配（最长匹配）\n\n（3）location /documents/ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索其它 location\n只有其它 location后面的正则表达式没有匹配到时，才会采用这一条\n\n（4）location /documents/abc "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("    www.baidu.com\n匹配任何以 /documents/abc 开头的地址，匹配符合以后，还要继续往下搜索其它 location\n只有其它 location后面的正则表达式没有匹配到时，才会采用这一条\n\n（5）location ^~ /images/ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条\n\n（6）location ~* \\.(gif"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("|")]),n._v("jpg"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("|")]),n._v("jpeg)$ "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n匹配所有以 gif、jpg或jpeg 结尾的请求\n然而，所有请求 /images/ 下的图片会被 location ^~ /images/ 处理，因为 ^~ 的优先级更高，所以到达不了这一条正则\n\n（7）location /images/abc "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n最长字符匹配到 /images/abc，优先级最低，继续往下搜索其它 location，会发现 ^~ 和 ~ 存在\n\n（8）location ~ /images/abc "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n匹配以/images/abc 开头的，优先级次之，只有去掉 location ^~ /images/ 才会采用这一条\n\n（9）location /images/abc/1.html "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n匹配/images/abc/1.html 文件，如果和正则location ~ /images/abc/1.html 相比，正则优先级更高\n\n优先级总结：\n(location = 完整路径) "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")]),n._v(" (location ^~ 路径) "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")]),n._v(" (location ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("~* 正则顺序) "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")]),n._v(" (location 部分起始路径) "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(">")]),n._v(" (location /)\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('：Nginx location “/” 配置\n服务访问\n服务请求如下（示例）：\n\nnginx服务： http://127.0.0.1:80\n后台服务：http://127.0.0.1:8088\n测试url地址：http://127.0.0.1:8088/test/api/findAll\n场景一、\nnginx配置：\n\nlocation /test/ {\n   proxy_pass http://127.0.0.1:8088/;\n}\n\n请求地址：http://127.0.0.1/test/api/findAll\n实际上服务请求地址为：http://127.0.0.1:8088/api/findAll\n规则：location最后有"/“,proxy_pass最后有”/" 结果为 proxy_pass + url中location最后一个斜线以后的部分\n\n场景二、\nnginx配置：\n\nlocation /test {\n   proxy_pass http://127.0.0.1:8088/;\n}\n\n请求地址：http://127.0.0.1/test/api/findAll\n实际上服务请求地址为：http://127.0.0.1:8088//api/findAll\n规则：location最后无"/“,proxy_pass最后有”/" 结果为 proxy_pass + / + url中location最后一个斜线以后的部分\n\n场景三、\nnginx配置：\n\nlocation /test/ {\n   proxy_pass http://127.0.0.1:8088;\n}\n\n请求地址：http://127.0.0.1/test/api/findAll\n实际上服务请求地址为：http://127.0.0.1:8088/test/api/findAll\n规则：location最后有"/“,proxy_pass最后无”/" 结果为 proxy_pass + location + url中location后面的部分(不包含第一个/)\n\n场景四、\nnginx配置：\n\nlocation /test {\n   proxy_pass http://127.0.0.1:8088;\n}\n\n请求地址：http://127.0.0.1/test/api/findAll\n实际上服务请求地址为：http://127.0.0.1:8088/test/api/findAll\n规则：location最后无"/“,proxy_pass最后无”/" 结果为 proxy_pass + location + “/” + url中location后面的部分(不包含第一个/)\n\n以下配置的规则可以参考上面的场景。\n\n场景五、\nnginx配置：\n\nlocation /test/ {\n   proxy_pass http://127.0.0.1:8088/server/;\n}\n\n请求地址：http://127.0.0.1/test/api/findAll\n实际上服务请求地址为：http://127.0.0.1:8088/server/api/findAll\n\n场景六、\nnginx配置：\n\nlocation /test {\n   proxy_pass http://127.0.0.1:8088/server/;\n}\n\n请求地址：http://127.0.0.1/test/api/findAll\n实际上服务请求地址为：http://127.0.0.1:8088/server//api/findAll\n\n场景七、\nnginx配置：\n\nlocation /test {\n   proxy_pass http://127.0.0.1:8088/server/;\n}\n\n请求地址：http://127.0.0.1/test/api/findAll\n实际上服务请求地址为：http://127.0.0.1:8088/serverapi/findAll\n\n场景八、\nnginx配置：\n\nlocation /test {\n   proxy_pass http://127.0.0.1:8088/server;\n}\n\n请求地址：http://127.0.0.1/test/api/findAll\n实际上服务请求地址为：http://127.0.0.1:8088/server/api/findAll\n————————————————\n版权声明：本文为CSDN博主「SmallCat0912」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。\n\n')])])]),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/SmallCat0912/article/details/125391486",target:"_blank",rel:"noopener noreferrer"}},[n._v("原文链接"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=o.exports}}]);