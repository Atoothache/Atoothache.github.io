(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{357:function(a,e,n){"use strict";n.r(e);var t=n(13),l=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"flyway使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flyway使用"}},[a._v("#")]),a._v(" flyway使用")]),a._v(" "),e("p",[a._v("1.下载：https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/4.2.0/")]),a._v(" "),e("p",[a._v("2.解压")]),a._v(" "),e("p",[e("strong",[a._v("flyway 配置文件：")])]),a._v(" "),e("div",{staticClass:"language-conf extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("flyway.url=jdbc:oracle:thin:@192.168.133.13:1521:orcl\n\nflyway.driver=oracle.jdbc.driver.OracleDriver\n\nflyway.user=WK_NAN\n\nflyway.password=dragon123\n\nflyway.baselineOnMigrate: true\nflyway.placeholderReplacement: false\n")])])]),e("p",[e("strong",[a._v("flyway最基本的几个命令。")])]),a._v(" "),e("p",[a._v("Migrate：应用所有的迁移到最新版本，它会在你的DB中新建个表schema_version来存放每次升级的版本信息。")]),a._v(" "),e("p",[a._v("Clean：clean all objects")]),a._v(" "),e("p",[a._v("Info：打印所有的迁移的信息以及状态。")]),a._v(" "),e("p",[a._v("Validate：迁移之前进行验证。")]),a._v(" "),e("p",[a._v("Baseline：初始化schema_version表，并插入一条原始verion=1。")]),a._v(" "),e("p",[a._v("Repair：它主要做了两件事，移除所有失败的迁移（升级），重置校验和。")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1，migrate\n执行sql文件夹中的sql，更新到最新版本\n2，baseline\n对已经拥有表结构的数据库中实现添加Metadata表。注意：sql脚本执行，会从第二个V脚本开始，因为这个命令会以当前数据库版本为基线进行版本创建。\n3，clean\n清除掉对应数据库Schema中所有的对象，说白了，删库。但在生产环境务必禁用。\n4，info\n打印所有的Migrations的详细和状态信息。\n5，repair\nrepair操作能够修复metaData表。\n6，undo 撤销操作，社区版不支持。\n7，validate 验证已经apply的Migrations是否有变更，默认开启的，原理是对比MetaData表与本地Migrations的checkNum值，如果值相同则验证通过，否则失败。\n")])])])])}),[],!1,null,null,null);e.default=l.exports}}]);